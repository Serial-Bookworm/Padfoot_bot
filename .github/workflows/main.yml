name: Padfoot Bot CI-CD

on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main]
  pull_request:
    branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains multiple jobs
  # build_and_push_to_hub:
  #   # The type of runner that the job will run on
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v3
    
  #   - name: Set up QEMU
  #     uses: docker/setup-qemu-action@v1

  #   - name: Set up Docker Buildx
  #     uses: docker/setup-buildx-action@v1

  #   - name: Login to DockerHub
  #     uses: docker/login-action@v1
  #     with:
  #       username: ${{ secrets.DOCKERHUB_USERNAME }}
  #       password: ${{ secrets.DOCKERHUB_TOKEN }}

  #   - name: Create a temporary .env file for storing docker compose variables 
  #     run: |
  #       touch .env
  #       echo DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }} >> .env
  #       echo DOCKERHUB_REPO_NAME=${{ secrets.DOCKERHUB_REPO_NAME }} >> .env
    
  #   - name: Build the Docker image
  #     run: make build

  #   - name: Push the Docker images
  #     run: docker push ${{secrets.DOCKERHUB_USERNAME}}/${{secrets.DOCKERHUB_REPO_NAME}}:padfoot_bot_latest


  deploy:
    runs-on: ubuntu-latest   
    # needs: [build_and_push_to_hub]
    steps:
      - name: Deploy to Server
        uses: appleboy/ssh-action@master
        # Don't forget to add env vars as secrets on GitHub
        with:
          # VPS IP
          host: ${{ secrets.VPS_SSH_HOST }}
          # VPS username
          username: ${{ secrets.VPS_SSH_USERNAME }}
          # SSH key (copy it from your local machine)
          key: ${{ secrets.VPS_SSH_SECRET }}
          # SSH port
          port: ${{ secrets.VPS_SSH_PORT }}
          # passphrase
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          script: |  
            cd ${{ secrets.PROJECT_PATH }} | git pull https://${{ secrets.TOKEN }}@github.com/Serial-Bookworm/Padfoot_bot.git 
            make down-v
            make build
            echo "Deleting old image(s)..."
            docker image prune -a -f